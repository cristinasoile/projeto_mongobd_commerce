// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('commerce');

db.produtos.find({});
// db.resumoProdutos.find({});

// db.produtos.countDocuments({});
// db.produtos.find({},{"nome":1, "vendidos": 1, "_id":0}).sort({"vendidos":1});
// db.produtos.find({},{"nome":1, "vendidos": 1, "_id":0}).sort({"vendidos":-1}).limit(1);
// db.produtos.find({vendidos: {$gt: 50, $lt: 100}}, {_id: 0, nome: 1, vendidos: 1}).sort({vendidos: 1});
//  db.produtos.find({curtidas: {$eq: 36}},{_id: 0, nome: 1, vendidos: 1, curtidas:1});
// db.produtos.find({ $or: [{ curtidas: 36 }, { vendidos: 85 }] },
//   { _id: 0, nome: 1, vendidos: 1, curtidas: 1 });
// db.produtos.find({ $and: [{ curtidas: {$gt:10, $lt:100} }] },
//   { _id: 0, nome: 1, curtidas: 1 });
// db.produtos.find({ $and: 
//   [  {vendidos: {$ne:50} }, { tags: {$exists:false}}] },
//   { _id: 0, nome: 1, vendidos: 1 });
// db.produtos.deleteMany({ curtidas: { $lt: 50 } });
// db.produtos.find({}, {_id:0, nome:1});


// --------- elemMatch
  // db.produtos.find({
  // valoresNutricionais: {
  //   $elemMatch: {tipo: "calorias", quantidade: {$lt: 500}},
  // }}, {_id: 0, nome: 1}
  // );

  //   db.produtos.find({
  // valoresNutricionais: {
  //   $elemMatch: {tipo: "proteínas", percentual: {$gte:30, $lte: 40}},
  // }}, {_id: 0, nome: 1}
  // );

  //     db.produtos.find({nome: { $nin: [/Big Mac/i, /McChicken/i]} }, {_id: 0, nome: 1, curtidas: 1 , vendidos: 1}
  // );

//       db.produtos.updateMany({nome: {$ne: "McChicken"}}, {$addToSet: {ingredientes: "ketchup"}}
//   );
// db.produtos.find({}, {_id:0, nome: 1, ingredientes:1});

//       db.produtos.updateMany({},{ $set: {criadoPor:"Ronald McDonald"}});
// db.produtos.find({}, {_id:0, nome: 1, criadoPor:1});

// db.produtos.find( {ingredientes: "picles"}, {_id:0, nome: 1, ingredientes:1, valoresNutricionais:{$slice:3}});

// db.produtos.updateMany({}, { $set: {avaliacao:NumberInt(0)}});
// db.produtos.updateMany({tags:"bovino"}, { $set: { avaliacao: 5 }});
// db.produtos.updateMany({tags:"ave"}, { $set: {avaliacao: 3 }});

// db.produtos.find({}, {_id:0, nome:1, avaliacao:1})

// db.produtos.updateOne({nome: "Big Mac"}, { $set: {ultimaModificacao: {$type: "timestamp"}}});

// db.produtos.find({ultimaModificacao:{$exists: true}}, {_id:0, nome:1})
// db.resumoProdutos.insertOne({franquia: "McDonalds", totalProdutos: db.produtos.countDocuments({})});

// db.resumoProdutos.find({}, {_id:0})

//   db.produtos.updateMany({nome:{ $in: ["Big Mac", "Quarteirão com Queijo"]}}, {$addToSet: {ingredientes: "bacon"}}
//   );
// db.produtos.find({}, {_id:0, nome: 1, ingredientes:1});

// db.produtos.updateMany({}, {$pull: {ingredientes: "cebola"}});

// db.produtos.find({}, {_id:0, nome:1, ingredientes: 1});

// db.produtos.updateOne({nome:"Quarteirão com Queijo"}, {$pop: {ingredientes: -1}});

// db.produtos.find({}, {_id:0, nome:1, ingredientes: 1});

// db.produtos.updateOne({nome:"Cheddar McMelt"}, {$pop: {ingredientes: 1}});

// db.produtos.find({}, {_id:0, nome:1, ingredientes: 1});

// ____________ 22________

// db.produtos.updateMany({}, { $set: { vendasPorDia: [0, 0, 0, 0, 0, 0, 0] } });
// db.produtos.updateMany({ nome: "Big Mac" }, { $set: { "vendasPorDia.3": 60 } });
// db.produtos.updateMany({ tags: "bovino" }, { $set: { "vendasPorDia.6": 120 } });

// db.produtos.find({}, { _id: 0, nome: 1, vendasPorDia: 1 });

// ____________ 23________